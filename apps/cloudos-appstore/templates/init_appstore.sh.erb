#!/bin/bash

if [ -z "${APPSTORE_PASS}" ] ; then
  echo "No APPSTORE_PASS found in environment"
  exit 1
fi

ADMIN="${1}"
if [ -z "${ADMIN}" ] ; then
  echo "No admin provided"
  exit 1
fi

SERVER="${2}"
if [ -z "${SERVER}" ] ; then
  echo "No server provided"
  exit 1
fi
CAS_OPTS="--account ${ADMIN} --server ${SERVER}"

<% init_bag = @app[:databag][:init] %>

OK_APPS=""
SKIPPED_APPS=""
FAILED_APPS=""
APP_JSON=$(mktemp /tmp/app.XXXXXXX.json || exit 1)

<% init_bag['initial_apps'].each do |app| %>

if [ ! cas apps ${CAS_OPTS} --operation read --name <%=app['name']%> 2> /dev/null ] ; then

  OK=0
  cas apps ${CAS_OPTS} --operation create --bundle <%=app['bundleUrl']%> --bundle-sha <%=app['bundleSha']%> > ${APP_JSON}
  NAME=$(cas json --file ${APP_JSON} --operation read --path app)
  VERSION=$(cas json --file ${APP_JSON} --operation read --path version)

  if [[ $? -eq 0 && ! -z "${NAME}" && ! -z "${VERSION}" ]] ; then

    cas apps ${CAS_OPTS} --operation update --name ${NAME} --version ${VERSION} --status published > ${APP_JSON}
    STATUS=$(cas json --file ${APP_JSON} --operation read --path status)
    if [ "${STATUS}" == "published" ] ; then
      OK_APPS="${OK_APPS} <%=app['name']%>"
      OK=1
    fi

  fi
else
  SKIPPED_APPS="${SKIPPED_APPS} <%=app['name']%>"
  OK=1
fi

if [ ${OK} -eq 0 ] ; then
  FAILED_APPS="${FAILED_APPS} <%=app['name']%>"
fi

<% end %>

echo "---------------------------------"
echo "Appstore initialization complete"
echo "Apps installed OK: ${OK_APPS}"
echo "Apps already installed (skipped): ${SKIPPED_APPS}"
echo "Apps that FAILED installation: ${FAILED_APPS}"
echo "---------------------------------"
