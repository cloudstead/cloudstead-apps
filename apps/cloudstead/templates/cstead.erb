#!/bin/bash

function die () {
  echo >&2 "${1}"
  exit 1
}

BASE=$(cd <%=@app[:run_as_home]%>/<%=@app[:name]%> && pwd)

JAR_PATTERN="cloudstead-server-*.jar"
JAR_DIR="${BASE}/target"
JAR="$(find ${JAR_DIR} -maxdepth 1 -type f -name ${JAR_PATTERN})"
NUM_JARS=$(find ${JAR_DIR} -maxdepth 1 -type f -name ${JAR_PATTERN} | wc -l | tr -d ' ')

if [ ${NUM_JARS} -eq 0 ] ; then
  die "No cloudstead-server jar found in ${JAR_DIR}. Please build it first: cd ${BASE}/target && mvn package"

elif [ ${NUM_JARS} -gt 1 ] ; then
  die "Multiple cloudstead-server jars found in ${JAR_DIR}: ${JAR}"
fi

CMD_LIST="${BASE}/.cstead-commands"
all_commands=$(cat ${CMD_LIST} | awk '{print $1}' | tr -d ':' | tr '\n' ' ')

debug="${1}"
if [ "x${debug}" = "xdebug" ] ; then
    shift
    ARG_LEN=$(echo -n "${1}" | wc -c)
    ARG_NUMERIC_LEN=$(echo -n "${1}" | tr -dc [:digit:] | wc -c)  # strip all non-digits
    if [ ${ARG_LEN} -eq ${ARG_NUMERIC_LEN} ] ; then
        # Second arg is the debug port
        DEBUG_PORT="${1}"
        shift
    else
        DEBUG_PORT=5005
    fi
    debug="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=${DEBUG_PORT}"
else
    debug=""
fi

command="${1}"
if [ -z "${command}" ] ; then
  die "No command given. Use one of these: ${all_commands}"
fi
shift

class=$(cat ${CMD_LIST} | egrep "^${command}:" | tr ':' ' ' | awk '{print $2}')
if [ -z "${class}" ] ; then
  die "$0 doesn't understand ${command}. Use one of these: ${all_commands}"
fi

FIXED_ARGS=""
if [[ ${command} = "dns" || ${command} = "cos-dns" ]] ; then
  CONFIG=<%=@app[:chef_user_home]%>/chef/data_bags/cloudos-dns/init.json
  CONFIG_NODE="dyn"
  FIXED_ARGS="direct --config ${CONFIG} --config-node ${CONFIG_NODE}"
fi

exec java ${debug} -cp ${JAR} ${class} ${FIXED_ARGS} "$@"
